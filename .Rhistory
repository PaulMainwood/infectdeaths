last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[7])
lag_infs_to_deaths <- 14
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
last_week
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[7])
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[7])
lag_infs_to_deaths <- 21
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[7])
lag_infs_to_deaths <- 28
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[7])
lag_infs_to_deaths <- 21
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[7])
b <- lapply(ages, function(n) model_with_lag(infections, deaths, first_week, last_week, lag_infs_to_deaths, n))
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '0-1' & variable != '1-4' & variable != '5-9' & variable != '10-14')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0.000001, 0.11))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.11))
log_plot
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '0-1' & variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0.000001, 0.11))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.11))
log_plot
lag_infs_to_deaths <- 14
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '0-1' & variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0.000001, 0.11))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.11))
log_plot
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0.000001, 0.2))
lin_plot
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0.000001, 0.3))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.3))
log_plot
lag_infs_to_deaths <- 28
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '0-1' & variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0.000001, 0.3))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.3))
log_plot
lag_infs_to_deaths <- 21
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
data_long <- melt(c, id = "Week")
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0.000001, 0.3))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.3))
log_plot
21
lag_infs_to_deaths <- 21
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0.000001, 0.3))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.3))
log_plot
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0, 0.2))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.2))
log_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.2), breaks = c(0.00001, 0.0001, 0.001, 0.01))
log_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log2", limits = c(0.000001, 0.2), breaks = c(0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log", limits = c(0.000001, 0.2), breaks = c(0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
lag_infs_to_deaths <- 28
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0, 0.2))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
lag_infs_to_deaths <- 7
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0, 0.2))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
lag_infs_to_deaths <- 14
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0, 0.2))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
lag_infs_to_deaths <- 35
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0, 0.2))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
lag_infs_to_deaths <- 28
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0, 0.2))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
lag_infs_to_deaths <- 21
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0, 0.2))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
infections_final
lag_infs_to_deaths <- 28
first_week <- min(infections_final$Date)
last_week <- max(infections_final$Date) - lag_infs_to_deaths
ages <- colnames(infections_final)[4:10]
model_with_lag <- function(infections_raw, deaths_raw, first_week, last_week, lag_infs_to_deaths, age_group){
#Grab appropriate infections values
infections <- infections_raw %>% filter(Date >= first_week) %>% filter(Date <= last_week)
infec <- pull(infections, age_group)
infec_dates <- infections$Date
print(length(infec))
#Select appropriate hospitalisation values
deaths_raw <- deaths_raw %>% filter(Date >= first_week + lag_infs_to_deaths) %>% filter(Date <= last_week + lag_infs_to_deaths)
hosp <- pull(deaths_raw, age_group)
hosp_dates <- deaths_raw$Date
print(length(hosp))
ss <- list()
ss <- AddDynamicRegression(ss, hosp ~ infec)
model <- bsts(hosp, state.specification = ss, niter = 1000)
dyn_coeffs <- apply(model$dynamic.regression.coefficients, 3, mean)
plot(hosp_dates, dyn_coeffs, type = "l", log = "y")
return(list(model = model, dyn_coeffs = dyn_coeffs, infec_dates = infec_dates, hosp_dates = hosp_dates, var = var(dyn_coeffs)))
}
model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, ages[6])
b <- lapply(ages, function(n) model_with_lag(infections_final, deaths_final, first_week, last_week, lag_infs_to_deaths, n))
c <- cbind(b[[1]]$hosp_dates, bind_cols(lapply(seq(1:length(b)), function(n) b[[n]]$dyn_coeffs)))
colnames(c) <- c("Week", ages)
data_long <- melt(c, id = "Week") %>% filter(variable != '2-11 modelled')
lin_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(limits = c(0, 0.2))
lin_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%"))
log_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%")) + labs(caption = "Source: ONS infection survey and death certificates, England; experimental methodology by @paulmainwood; don't use for anything at all yet")
log_plot
log_plot <- ggplot(data_long, aes(x = Week, y = value, colour = variable)) +  geom_line(size = 1) + scale_y_continuous(trans = "log10", limits = c(0.000001, 0.2), breaks = c(0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1), labels = c("0.0001%", "0.001%", "0.01%", "0.1%", "1%", "10%")) + labs(caption = "Source: ONS infection survey and death certificates, England; experimental methodology based on state-space models; if you use this for anything important you're insane.")
log_plot
data_long
View(data_long)
